{"version":3,"sources":["Component/NewEventByAdmin/NewEventByAdmin.js","Component/VolunteerActivities/VolunteerActivities.js","Component/Home/Home.js","Component/Events/Events.js","Component/LogIn/firebase.config.js","Component/LogIn/LogIn.js","Component/Register/Register.js","Component/PrivateRoute/PrivetRoute.js","Component/Header/Header.js","Component/VolunteerRegiList/VolunteerRegList.js","Component/AddNewEvent/AddNewEvent.js","App.js","serviceWorker.js","index.js","logos/Group 1329.png","logos/extraVolunteer.png"],"names":["NewEventByAdmin","useState","adminEvent","setAdminEvent","useEffect","fetch","then","res","json","data","history","useHistory","map","event","className","Card","Img","variant","src","eventPic","Body","Title","to","onClick","title","console","log","push","inputEventTitle","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","marginLeft","breakpoints","up","spacing","width","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","VolunteerActivities","classes","setEvent","id","InputBase","placeholder","root","input","inputProps","pic","Home","Events","eventList","setEventList","useContext","UserContext","loggedInUser","email","method","headers","authorization","sessionStorage","getItem","newEvent","cardImg","alt","date","_id","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","LogIn","isSignedIn","name","setUser","setLoggedInUser","from","useLocation","state","pathname","provider","GoogleAuthProvider","storeAuthToken","currentUser","getIdToken","idToken","setItem","replace","catch","error","logo","signInWithPopup","result","user","signedInUser","displayName","errorMessage","message","class","margin","Register","description","newReg","setNewReg","onChangeEvent","e","newAddEventInfo","target","value","noValidate","autoComplete","TextField","label","onChange","type","required","Button","newAddedEvent","body","JSON","stringify","PrivetRoute","children","rest","render","location","flexGrow","Header","buttons","NavDropdown","Item","signOut","signOutUser","Toolbar","Typography","MenuItem","VolunteerRegList","regList","setRegList","Table","hover","size","AddNewEvent","by","setNewEvent","onChangeInput","newEventInfo","Form","Row","Col","Label","Control","as","rows","createContext","App","Provider","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.eea4ac1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Link} from \"react-router-dom\";\r\nimport eventPic from '../../logos/extraVolunteer.png';\r\n\r\nconst NewEventByAdmin = () => {\r\n    const [adminEvent, setAdminEvent] = useState([]);\r\n\r\n    useEffect( () => {\r\n        fetch('https://young-badlands-50477.herokuapp.com/newEventByAdmin')\r\n        .then(res => res.json())\r\n        .then(data => setAdminEvent(data))\r\n        \r\n      },[])\r\n\r\n      const history = useHistory()\r\n      const handleAddEvent = (title) => {\r\n        console.log(title);\r\n        history.push(`/register/${title}`);\r\n      }\r\n    return (\r\n        <>\r\n            {adminEvent.map(event =>\r\n                <div className = \"col-md-3\">\r\n                    <Card  className = \"box\">\r\n                        <Card.Img variant=\"top\" src={eventPic} />\r\n                        <Card.Body>\r\n                            <Card.Title><Link to='/register' onClick={() =>handleAddEvent(event.title)} className = \"title link\">{event.inputEventTitle}</Link></Card.Title>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewEventByAdmin;","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport './VolunteerActivities.css';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NewEventByAdmin from '../NewEventByAdmin/NewEventByAdmin';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: '#f5f5f5',\r\n        '&:hover': {\r\n          backgroundColor: '#f9f8f8',\r\n        },\r\n        marginLeft: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: '370px',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '12ch',\r\n          '&:focus': {\r\n            width: '20ch',\r\n          },\r\n        },\r\n      }\r\n  }));\r\n\r\n\r\nconst VolunteerActivities = () => {\r\n    const classes = useStyles();\r\n    const [event, setEvent] = useState([]);\r\n    useEffect( () => {\r\n        fetch('https://young-badlands-50477.herokuapp.com/events')\r\n        .then(res => res.json())\r\n        .then(data => setEvent(data))\r\n        \r\n    },[])\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"searchBar\">\r\n                <h1>I grow by helping people in need.</h1>\r\n                <div className={classes.search} id=\"search\">\r\n                    <div className={classes.searchIcon}>\r\n                        <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                    placeholder=\"Search…\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {event.map(event =>\r\n                    <div className = \"col-md-3\">\r\n                        <Card  className = \"box\">\r\n                            <Card.Img variant=\"top\" src={event.pic} />\r\n                            <Card.Body>\r\n                                <Card.Title><Link to='/register' className = \"title link\">{event.title}</Link></Card.Title>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                )}\r\n                <NewEventByAdmin />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VolunteerActivities;","import React from 'react';\r\nimport './Home.css';\r\nimport VolunteerActivities from '../VolunteerActivities/VolunteerActivities';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div>\r\n            <VolunteerActivities />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useContext } from 'react';\r\nimport './Events.css';\r\nimport cardImg from '../../logos/extraVolunteer.png';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { UserContext } from '../../App';\r\n\r\nconst Events = () => {\r\n    const [eventList, setEventList] = useState([]);\r\n    const [loggedInUser] = useContext(UserContext);\r\n\r\n    useEffect(() =>{\r\n        fetch('https://young-badlands-50477.herokuapp.com/addEvents?email='+loggedInUser.email,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${sessionStorage.getItem('token')}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setEventList(data))\r\n    },[])\r\n\r\n    const handleCancel = (id) => {\r\n        fetch(`https://young-badlands-50477.herokuapp.com/deleteEvent/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                console.log(data)\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"userEvent-list row justify-content-between\">\r\n                {\r\n                    eventList.map(newEvent =>\r\n                        <div className=\"eventCard col-md-5.5\">\r\n                            <div className=\"cardImg\">\r\n                                <img className=\"img\" src={cardImg} alt=\"img\"/>\r\n                            </div>\r\n                            <div className=\"body\">\r\n                                <h6>{newEvent.inputEventTitle}</h6>\r\n                                <p>{newEvent.date}</p>\r\n                                <button onClick={() =>handleCancel(`${newEvent._id}`)} className=\"cancelBtn\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Events;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyCriR03o58HIIp8lbC8LI2KPhMdEKj7baY\",\r\n    authDomain: \"volunteer-network-associations.firebaseapp.com\",\r\n    databaseURL: \"https://volunteer-network-associations.firebaseio.com\",\r\n    projectId: \"volunteer-network-associations\",\r\n    storageBucket: \"volunteer-network-associations.appspot.com\",\r\n    messagingSenderId: \"327654278769\",\r\n    appId: \"1:327654278769:web:39d6e8fe7a7851d2ce3dd0\",\r\n    measurementId: \"G-LDKD833QT5\"\r\n  };\r\n\r\nexport default firebaseConfig;","import React, { useState } from 'react';\r\nimport './LogIn.css';\r\nimport logo from '../../logos/Group 1329.png';\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { UserContext } from '../../App';\r\nimport { useContext } from 'react';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst LogIn = () => {\r\n\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: ''\r\n    })\r\n\r\n    const [loggedInUser ,setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const handleGoogleSignIn = () => {\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            const {displayName, email} = result.user;\r\n            const signedInUser = {\r\n                isSignedIn: true,\r\n                name: displayName,\r\n                email: email\r\n            } \r\n            setUser(signedInUser);\r\n            setLoggedInUser(signedInUser);\r\n            storeAuthToken();\r\n        }).catch(function(error) {\r\n            const errorMessage = error.message;\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    const storeAuthToken = () => {\r\n        firebase.auth().currentUser.getIdToken(true)\r\n        .then(function(idToken) {\r\n            sessionStorage.setItem('token', idToken);\r\n            history.replace(from);\r\n        }).catch(function(error) {\r\n            //Handle error\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className = 'logIn'>\r\n            <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n            <div className=\"logInForm\">\r\n                <div className=\"logInMethod\">\r\n                    <h3>Login With</h3>\r\n                    <Link to=\"/register\">\r\n                        <button onClick={handleGoogleSignIn} className ='logInBtn'> <i class=\"fab fa-google\"></i> <span>Continue with Google</span></button>\r\n                    </Link>\r\n                    <p className ='createAccountBtn'>Don't have an account? <Link to=\"/register\">Creat an account</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogIn;","import React from 'react';\r\nimport logo from '../../logos/Group 1329.png';\r\nimport './Register.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from '../../App';\r\nimport { useContext } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Register = () => {\r\n    const classes = useStyles();\r\n    const [loggedInUser ] = useContext(UserContext);\r\n    const [newReg, setNewReg] = useState({\r\n      date: '',\r\n      description: '',\r\n      inputEventTitle: ''\r\n  })\r\n\r\n  const handleAddNewEvent = () => {\r\n    const newAddedEvent = {...loggedInUser, ...newReg};\r\n    fetch('https://young-badlands-50477.herokuapp.com/newEvent',{\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(newAddedEvent)\r\n    })\r\n    .then(res => res.json())\r\n    .then(data =>{\r\n        console.log(data)\r\n    })\r\n  }\r\n\r\n\r\n  const onChangeEvent = (e) => {\r\n    const newAddEventInfo = {...newReg};\r\n    newAddEventInfo[e.target.name] = e.target.value;\r\n    setNewReg(newAddEventInfo);\r\n    console.log(newAddEventInfo);\r\n  }\r\n    \r\n\r\n\r\n    return (\r\n        <div className =\"register\">\r\n            <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n            <div className=\"registerForm\">\r\n                <h3>Register as a Volunteer</h3>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField name=\"inputName\" value={loggedInUser.name} className=\"inputBox\" label=\"Full Name\"/>\r\n                    <TextField name=\"inputEmail\" value={loggedInUser.email} className=\"inputBox\" label=\"User Name Or Email\"/>\r\n                    <TextField name=\"date\" onChange={onChangeEvent} value={newReg.date} type=\"date\" className=\"inputBox\" />\r\n                    <TextField name=\"description\" onChange={onChangeEvent} value={newReg.description} required className=\"inputBox\" label=\"Set Description\"/>\r\n                    <TextField name=\"inputEventTitle\" onChange={onChangeEvent} value={newReg.inputEventTitle} className=\"inputBox\" label=\"What Event you want to work\"/>\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"registrationBtn\">\r\n                      <Link onClick={handleAddNewEvent} to='/home' className = 'regLink'>Registration</Link>\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport { useContext } from 'react';\r\n\r\nconst PrivetRoute = ({children, ...rest}) => {\r\n    const [loggedInUser ,setLoggedInUser] = useContext(UserContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                loggedInUser.email ? (\r\n                children\r\n                ) : (\r\n                <Redirect\r\n                    to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: location }\r\n                    }}\r\n                />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivetRoute;","import React, { useState } from 'react';\r\nimport './Headers.css';\r\nimport logo from '../../logos/Group 1329.png';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: ''\r\n    })\r\n\r\n    let buttons;\r\n\r\n    const handleSignOut = () => {\r\n        firebase.auth().signOut()\r\n        .then(res => {\r\n            const signOutUser = {\r\n                isSignedIn: false,\r\n                name: '',\r\n                email: ''\r\n            }\r\n            setUser(signOutUser);\r\n            setLoggedInUser(signOutUser);\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });\r\n    }\r\n\r\n    if(loggedInUser.email){\r\n        buttons = (\r\n            <NavDropdown title={loggedInUser.name} id=\"basic-nav-dropdown\" >\r\n                <NavDropdown.Item><Link to=\"/volunteerList\" className = \"link\">Go to Admin</Link></NavDropdown.Item>\r\n                <NavDropdown.Item onClick={handleSignOut}>Log Out</NavDropdown.Item>\r\n            </NavDropdown>\r\n        )\r\n    }\r\n    else{\r\n        buttons = (\r\n            <ul className=\"navbar-nav menuBtn\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/Login\" className = \"regBtn link\">Register</Link>\r\n                    <Link to=\"/volunteerList\" className = \"adminBtn link\">Admin</Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={classes.root}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n                        </Typography>\r\n                        <MenuItem><Link to=\"/\" className = \"link\">Home</Link></MenuItem>\r\n                        <MenuItem><Link to=\"/donation\" className = \"link\">Donation</Link></MenuItem>\r\n                        <MenuItem><Link to=\"/event\" className = \"link\">Events</Link></MenuItem>\r\n                        <MenuItem><Link to=\"/blog\" className = \"link\">Blog</Link></MenuItem>\r\n                        {buttons}\r\n                    </Toolbar>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useEffect } from 'react';\r\nimport './VolunteerRegList.css';\r\nimport {Link } from \"react-router-dom\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\nconst VolunteerRegList = () => {\r\n    const [regList, setRegList] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        fetch('https://young-badlands-50477.herokuapp.com/allEventList')\r\n        .then(res => res.json())\r\n        .then(data => setRegList(data))\r\n    },[])\r\n\r\n    const handleDelete = (id) => {\r\n        console.log(id);\r\n        fetch(`https://young-badlands-50477.herokuapp.com/deleteEvent/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                console.log(data)\r\n            })\r\n    };\r\n    return (\r\n        <div className=\"VolunteerRegList\">\r\n            <div className=\"row list-row\">\r\n                <div className=\"col-md-3\">\r\n                    <p>\r\n                        <Link className=\"link\" to=\"/volunteerList\">\r\n                            <i class=\"fas fa-user-friends\"></i><span className=\"volunteerList\"> Volunteer Register List</span>\r\n                        </Link>\r\n                    </p>\r\n                    <p>\r\n                        <Link className=\"link\" to=\"/addNewEvent\">\r\n                            <i class=\"fas fa-plus\"></i><span> Add Event</span>\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                    <h3 className =\"sec-title\">Volunteer register list</h3>\r\n                    <div className=\"regList\">\r\n                        <div className=\"listItem\">\r\n                            <Table hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Email ID</th>\r\n                                        <th>Registating date</th>\r\n                                        <th>Volunteer List</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                        {\r\n                                            regList.map(event =>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>{event.name}</td>\r\n                                                        <td>{event.email}</td>\r\n                                                        <td>{event.date}</td>\r\n                                                        <td>{event.inputEventTitle}</td>\r\n                                                        <td><i onClick={() =>handleDelete(`${event._id}`)} class=\"fas fa-trash-alt\"></i></td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            )\r\n                                        }\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VolunteerRegList;","import React, { useContext, useState } from 'react';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './AddNewEvent.css';\r\nimport { UserContext } from '../../App';\r\n\r\nconst AddNewEvent = () => {\r\n\r\n    const [loggedInUser ] = useContext(UserContext);\r\n    const [newEvent, setNewEvent] = useState({\r\n        inputEventTitle: '',\r\n        date: '',\r\n        description: '',\r\n        by: ''\r\n    })\r\n\r\n    const handleAddEvent = () => {\r\n        const newAddedEvent = {...loggedInUser, ...newEvent};\r\n        fetch('https://young-badlands-50477.herokuapp.com/addNewEvent',{\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify(newAddedEvent)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n        })\r\n    }\r\n\r\n    const onChangeInput = (e) => {\r\n        const newEventInfo = {...newEvent};\r\n        newEventInfo[e.target.name] = e.target.value;\r\n        setNewEvent(newEventInfo);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"addNewEvent\">\r\n            <div className=\"row list-row\">\r\n                <div className=\"col-md-3\">\r\n                    <p>\r\n                        <Link className=\"link\" to=\"/volunteerList\">\r\n                            <i class=\"fas fa-user-friends\"></i><span> Volunteer Register List</span>\r\n                        </Link>\r\n                    </p>\r\n                    <p>\r\n                        <Link className=\"link\" to=\"/addNewEvent\">\r\n                            <i class=\"fas fa-plus\"></i><span className=\"newEventList\"> Add Event</span>\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                    <h3 className =\"sec-title\">Add Event</h3>   \r\n                    <div className=\"newEventSec\">\r\n                        <div className=\"newEventForm\">\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Label>Event Title</Form.Label>\r\n                                        <Form.Control name=\"inputEventTitle\" onChange={onChangeInput} value={newEvent.inputEventTitle} placeholder=\"Enter title\" />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label>Event Date</Form.Label>\r\n                                        <Form.Control name=\"date\" onChange={onChangeInput} value={newEvent.date} type=\"date\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} name=\"description\" onChange={onChangeInput} value={newEvent.description} placeholder=\"Enter Designation\"/>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Label>Are You Admin</Form.Label>\r\n                                        <Form.Control name=\"by\" onChange={onChangeInput} value={newEvent.by} placeholder=\"Yes Or No\"/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"submitBtn\">\r\n                            <Link onClick={handleAddEvent} className=\"link regBtn\" to=\"/volunteerList\">Submit</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewEvent;","import React, { createContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Component/Home/Home';\nimport Events from './Component/Events/Events';\nimport LogIn from './Component/LogIn/LogIn';\nimport Register from './Component/Register/Register';\nimport { useState } from 'react';\nimport PrivetRoute from './Component/PrivateRoute/PrivetRoute';\nimport Header from './Component/Header/Header';\nimport VolunteerRegList from './Component/VolunteerRegiList/VolunteerRegList';\nimport AddNewEvent from './Component/AddNewEvent/AddNewEvent';\n\n\nexport const UserContext = createContext();\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({});\n  return (\n      <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <PrivetRoute path=\"/addNewEvent\">\n              <AddNewEvent />\n            </PrivetRoute>\n            <Route path=\"/event\">\n              <Events />\n            </Route>\n              <Route path=\"/logIn\">\n                <LogIn />\n              </Route>\n              <PrivetRoute path=\"/volunteerList\">\n                <VolunteerRegList />\n              </PrivetRoute>\n              <PrivetRoute path=\"/register\">\n                <Register />\n              </PrivetRoute>\n          </Switch>\n        </Router>\n      </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Group 1329.b7dd8bbe.png\";","module.exports = __webpack_public_path__ + \"static/media/extraVolunteer.01131059.png\";"],"sourceRoot":""}